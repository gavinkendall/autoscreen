#############################################################################################################################################################################
# Auto Screen Capture Configuration File
#
# You will always need a configuration file in order for the Auto Screen Capture application (autoscreen.exe) to run properly.
# By default autoscreen.exe will look for a file named "autoscreen.conf" in the same folder, but this can be changed with the -config command line option.
#
# For example ...
#
# autoscreen.exe
#     This will start Auto Screen Capture using "autoscreen.conf".
#     If this file cannot be found then it will be created on startup (assuming autoscreen.exe has the required permissions to write the file).
#
# autoscreen.exe -config="C:\My Configuration File.conf"
#     This will start Auto Screen Capture using the provided configuration file named "My Configuration File.conf" located on the C:\ drive.
#     If this file cannot be found then it will be created on startup (assuming autoscreen.exe has the required permissions to write the file).
#     So you can have multiple configuration files available and choose which configuration to load during the application's startup procedure
#     depending on how you want the application to be setup and behave based on the situation you're handling.
#
# This file is where to configure the application's default settings, the location of screenshots, what screens to capture, and how the application behaves.
# You can leave comments anywhere in this file if a line begins with '#' (like this line you're reading for example).
#
# You can use the following tags in folder paths and filepaths:
# $AppDataLocal$          The user's AppData\Local directory
# $AppDataRoaming$        The user's AppData\Roaming directory
# $Desktop$               The user's Desktop
# $MyDocuments$           The user's Documents directory
#############################################################################################################################################################################

# The version of Auto Screen Capture that this configuration file is intended for.
# Be careful if you change the version number and don't provide the correct definitions for the specific version
# as some settings will only work with certain versions of the application. Versioning of the configuration file starts with Auto Screen Capture 2.5.0.0 ("Limoncello").
Version=2.5.1.1

# Starting with version 2.5.0.0 the entire configuration file defines all the default application and user settings
# that were previously hard-coded within the application itself. Now you have the ability to define all of the default settings in a single file!

# Also, if you scroll down further, you will notice that every default Screen, Region, Editor, Schedule, Macro Tag, and Trigger is here too!
# This is in response to requests from admins who had to deploy autoscreen.exe to multiple user machines and wanted a simpler way to customize the experience for each user.

# WARNING
# The upgrade path from an old version of Auto Screen Capture to a new version of Auto Screen Capture has always intended to be relatively smooth and silent.
# However, now this power lies with you. Please be very careful not to run the wrong version of autoscreen.exe with the wrong version of autoscreen.conf!
# If you mix the wrong versions of the executable and the configuration file you will definitely have very weird results and possibly break a few things.
# Any errors encountered during the parsing of a configuration file will result in an "autoscreen_startup_error.txt" file appearing in the same folder as "autoscreen.exe".

# Settings the application will use on its consecutive runs after its first run.
ApplicationSettingsFile=$AppDataLocal$\Auto Screen Capture\!autoscreen\settings\application.xml
UserSettingsFile=$AppDataLocal$\Auto Screen Capture\!autoscreen\settings\user.xml
SFTPSettingsFile=$AppDataLocal$\Auto Screen Capture\!autoscreen\settings\sftp.xml
SMTPSettingsFile=$AppDataLocal$\Auto Screen Capture\!autoscreen\settings\smtp.xml

# Keep in mind the settings in this file are DEFAULT settings. These are settings that will be stored in
# the above defined XML data files on the FIRST RUN of the application.
#
# The next time you run the application it will use the settings from the defined XML data files.
# To revert to the default settings specified here simply delete the XML data files stored in "!autoscreen\settings" (or whatever folder you're using for the settings).
#
# Please note that Auto Screen Capture will need write permissions in order to create the XML data files.
# Normally the application can write everything to the user's "AppData\Local" folder (specified by $AppDataLocal$).
# For example, if the user is "gavin" then the user's "AppData\Local" folder will likely be "C:\Users\gavin\AppData\Local".

# The default screenshots folder where to store screenshots.
# This will be used when you add a new Screen or Region.
# Each Screen and Region has its own folder path so make sure to configure the Screens and Regions in this configuration file.
UserSetting::[Key="ScreenshotsFolder", Value="$AppDataLocal$\Auto Screen Capture\screenshots\"]

# The default filename pattern ("Macro") to use for each image file saved to disk.
# It relies on "macro tags". For example, the %date% macro tag returns the current date.
# This will be used when you add a new Screen or Region.
# Each Screen and Region has its own filename pattern ("Macro") so make sure to configure the Screens and Regions in this configuration file.
UserSetting::[Key="FilenamePattern", Value="%date%\%name%\%date%_%time%.%format%"]

# The default image format.
#
# The available formats are:
# BMP
# EMF
# GIF (not animated, sorry)
# JPEG
# PNG
# TIFF
# WMF
#
# This will be used when you add a new Screen or Region.
# Each Screen and Region has its own image format so make sure to configure the Screens and Regions in this configuration file.
UserSetting::[Key="ImageFormat", Value="JPEG"]

# Screens
# Each "Screen" represents a physical display.
# It's recommended to have AutoAdapt set to True if you're unsure of what displays will be utilized.
# The Screens defined here are setup for up to five displays so you can plug in additional displays and let the application automatically utilize them.
# A "Screen" can have its own folder path ("Folder") and filename pattern ("Macro") for screenshots captured from its associated display.
# You can have multiple Screens utilize a single display but save screenshots in different folders and with different filepath patterns.
#
# Source=0           Active Window
# Source=1           EnumDisplaySettings (user32.dll)       The "Win32" way of obtaining the display settings in Windows (often used by C++ programmers)
# Source=2           System.Windows.Forms.Screen (.NET)     The .NET way of obtaining the display settings in Windows (often used by C# and VB.NET programmers)
#
# Note: If one way isn't working for you then just try the other way. Sometimes you will get different resolutions from user32.dll (maybe from the graphics card).
#
# Component=0        The first physical display
# Component=1        The second physical display
# Component=2        The third physical display (do you see where this is going?)
#
# CaptureMethod=0    System.Drawing.Graphics.CopyFromScreen (.NET)
# CaptureMethod=1    BitBlt (gdi32.dll)
#
# Note: Again, this is up to you. I find BitBlt works for me but sometimes the .NET method works better depending on the setup.
#
# AutoAdapt
# This can be either False or True. If set to True the application will attempt to determine the position and size of each screen from the dictionary of available displays.
# So if you plug in additional displays then the application will try to use them. If you unplug those displays the application will try to ignore them.
# You can continue your screen capture session regardless of what displays are available at the time so you don't have to keep setting up each Screen for each display.
# With AutoAdapt on you can ignore X, Y, Width, and Height values; just leave them as 0 if you prefer.
# If you turn off AutoAdapt (by setting it to False) then you're responsible for specifying the position and size for each Screen by specifying X, Y, Width, and Height.
#
# Format
# This is the image format to use (BMP, EMF, GIF, JPEG, PNG, TIFF, or WMF).
#
# JPEGQuality
# The quality of the image. This only works with JPEG.
#
# ResolutionRatio
# This value determines the percentage of resolution ratio (from 1% to 100%) so it affects the size of the screenshots.
# A lower resolution ratio will result in smaller (and blurry) screenshots but will also use less disk space.
# Resolution Ratio can only work with the "System.Drawing.Graphics.CopyFromScreen (.NET)" capture method.
# The mouse pointer will not be captured if the resolution ratio is below 100.
#
# Mouse
# Determines if you want to capture the mouse pointer.
#
# Encrypt
# Determines if you want to encrypt the screenshots.
# An encrypted screenshot will be associated with a randomly-generated key.
# This makes it difficult for other applications to open and read the screenshots since Auto Screen Capture is the only application that can decrypt them with the associated keys. 
#
# The XML data for Screens is located in this file:
ApplicationSetting::[Key="ScreensFile", Value="$AppDataLocal$\Auto Screen Capture\!autoscreen\screens.xml"]

# This is the Active Window for taking screenshots of the active window. Remove the # at the beginning of the line to use it as a default Screen:
# Screen::[Enable=True, Name="Active Window", Folder="$AppDataLocal$\Auto Screen Capture\screenshots\", Macro="%date%\%name%\%date%_%time%.%format%", Source=0, Component=0, CaptureMethod=0, X=0, Y=0, Width=0, Height=0, AutoAdapt=False, Format=JPEG, JPEGQuality=100, ResolutionRatio=100, Mouse=True, Encrypt=False]

# The default Screens to use:
Screen::[Enable=True, Name="Screen 1", Folder="$AppDataLocal$\Auto Screen Capture\screenshots\", Macro="%date%\%name%\%date%_%time%.%format%", Source=2, Component=0, CaptureMethod=0, X=0, Y=0, Width=0, Height=0, AutoAdapt=True, Format=JPEG, JPEGQuality=100, ResolutionRatio=100, Mouse=True, Encrypt=False]
Screen::[Enable=True, Name="Screen 2", Folder="$AppDataLocal$\Auto Screen Capture\screenshots\", Macro="%date%\%name%\%date%_%time%.%format%", Source=2, Component=0, CaptureMethod=0, X=0, Y=0, Width=0, Height=0, AutoAdapt=True, Format=JPEG, JPEGQuality=100, ResolutionRatio=100, Mouse=True, Encrypt=False]
Screen::[Enable=True, Name="Screen 3", Folder="$AppDataLocal$\Auto Screen Capture\screenshots\", Macro="%date%\%name%\%date%_%time%.%format%", Source=2, Component=0, CaptureMethod=0, X=0, Y=0, Width=0, Height=0, AutoAdapt=True, Format=JPEG, JPEGQuality=100, ResolutionRatio=100, Mouse=True, Encrypt=False]

# Any additional Screens you may want:
# Screen::[Enable=True, Name="Screen 4", Folder="$AppDataLocal$\Auto Screen Capture\screenshots\", Macro="%date%\%name%\%date%_%time%.%format%", Source=2, Component=0, CaptureMethod=0, X=0, Y=0, Width=0, Height=0, AutoAdapt=True, Format=JPEG, JPEGQuality=100, ResolutionRatio=100, Mouse=True, Encrypt=False]
# Screen::[Enable=True, Name="Screen 5", Folder="$AppDataLocal$\Auto Screen Capture\screenshots\", Macro="%date%\%name%\%date%_%time%.%format%", Source=2, Component=0, CaptureMethod=0, X=0, Y=0, Width=0, Height=0, AutoAdapt=True, Format=JPEG, JPEGQuality=100, ResolutionRatio=100, Mouse=True, Encrypt=False]

# Regions
# Each "Region" represents an area of a display defined by its X, Y, Width, and Height values.
# A "Region" can have its own folder path ("Folder") and filename pattern ("Macro").
ApplicationSetting::[Key="RegionsFile", Value="$AppDataLocal$\Auto Screen Capture\!autoscreen\regions.xml"]
# Region::[Enable=False, Name="Region 1", Folder="$AppDataLocal$\Auto Screen Capture\screenshots\", Macro="%date%\%name%\%date%_%time%.%format%", X=0, Y=0, Width=100, Height=100, Format=JPEG, JPEGQuality=100, Mouse=True, Encrypt=False]
# Region::[Enable=False, Name="Region 2", Folder="$AppDataLocal$\Auto Screen Capture\screenshots\", Macro="%date%\%name%\%date%_%time%.%format%", X=0, Y=0, Width=100, Height=100, Format=JPEG, JPEGQuality=100, Mouse=True, Encrypt=False]
# Region::[Enable=False, Name="Region 3", Folder="$AppDataLocal$\Auto Screen Capture\screenshots\", Macro="%date%\%name%\%date%_%time%.%format%", X=0, Y=0, Width=100, Height=100, Format=JPEG, JPEGQuality=100, Mouse=True, Encrypt=False]

# The default screen capture interval (in milliseconds).
UserSetting::[Key="ScreenCaptureInterval", Value="60000"]

# Determines if we show the main interface.
UserSetting::[Key="ShowInterface", Value="True"]

# Determines if we show the system tray icon.
UserSetting::[Key="ShowSystemTrayIcon", Value="True"]

# The folder, filename pattern, and image format to use when you perform "Region Select -> Clipboard / Auto Save".
UserSetting::[Key="AutoSaveFolder", Value="$Desktop$"]
UserSetting::[Key="AutoSaveMacro", Value="Screenshot on %date% at %time%.%format%"]
UserSetting::[Key="AutoSaveFormat", Value="JPEG"]

# The filename pattern to use when you perform "Capture Now".
UserSetting::[Key="CaptureNowMacro", Value="%date%\%name%\%date%_%time%.%format%"]

# Should the application exit if it encounters an unhandled exception error?
# You might want the application to exit (True) or continue running (False).
# Errors will be written to the errors files in the defined errors folder (ErrorsFolder).
# Set this to either True or False.
ApplicationSetting::[Key="ExitOnError", Value="False"]

# The folder to store any errors encountered by the application.
ApplicationSetting::[Key="ErrorsFolder", Value="$AppDataLocal$\Auto Screen Capture\!autoscreen\errors\"]

# If we're running low on available disk space on a drive a screenshot is about
# to be written to then what type of threshold should we use? Percentage or number of bytes?
#
# 0    Check for available disk space as a percentage (so if the drive's available disk space is below 1% for example)
# 1    Check for available disk space as a number of bytes (such as 50000000 for ~50 MB (or 47.6837 MB))
ApplicationSetting::[Key="LowDiskMode", Value="1"]

# If LowDiskMode is set to 0 then this is the percentage of available disk space that will be checked as the threshold.
ApplicationSetting::[Key="LowDiskPercentageThreshold", Value="1"]

# If LowDiskMode is set to 1 then this is how many bytes will be checked as the low disk space threshold.
ApplicationSetting::[Key="LowDiskBytesThreshold", Value="50000000"]

# If a drive is running low on available disk space and the availble disk space is below the defined threshold
# do we stop the currently running screen capture session?
# Set this to either True or False.
ApplicationSetting::[Key="StopOnLowDiskError", Value="True"]

# Do you want a preview of what will be captured before starting a screen capture session?
UserSetting::[Key="Preview", Value="False"]

# With this set to True the application will write log files showing you what it's doing.
# The logs won't be very detailed. If you want detailed logs then use DebugMode.
ApplicationSetting::[Key="Logging", Value="True"]

# If you're experiencing issues with the application then set this to True.
# The application will write very detailed log files to the logs directory.
# WARNING: This can consume a lot of disk space if you leave it on for too long!
ApplicationSetting::[Key="DebugMode", Value="False"]

# The folder to store logs when DebugMode and/or Logging is enabled.
ApplicationSetting::[Key="LogsFolder", Value="$AppDataLocal$\Auto Screen Capture\!autoscreen\logs\"]

# An initial round of screenshots will be taken before taking screenshots
# based on the interval of the main timer.
#
# For example, with this set to True and starting a screen capture session on a 5 second interval,
# screenshots will be taken first, then we wait for five seconds, take screenshots, wait for another
# five seconds, take screenshots, etc. but with this set to False we wait for five seconds,
# take screenshots, wait for another five seconds, take screenshots, etc.
#
# Initial as True:
# 1) Take screenshots immediately
# 2) Wait for the first tick of the main timer's interval
# 3) Take screenshots
# 4) Wait for the next tick of the main timer's interval
# 5) Repeat steps 3 and 4 until the screen capture session stops
#
# Initial as False:
# 1) Wait for the first tick of the main timer's interval
# 2) Take screenshots
# 3) Wait for the next tick of the main timer's interval
# 4) Repeat steps 2 and 3 until the screen capture session stops
UserSetting::[Key="TakeInitialScreenshot", Value="True"]

# Screenshot references to keep track of what screenshots were taken.
ApplicationSetting::[Key="ScreenshotsFile", Value="$AppDataLocal$\Auto Screen Capture\!autoscreen\screenshots.xml"]

# Do you want the application to save screenshot references?
# This will write to the screenshots.xml data file so the application
# knows about all the screenshots that were taken and will show previously
# captured screenshots in the main interface, but the screenshots.xml data file
# can grow to be a very large file over time as a result. If you want to save space
# and don't care about having old screenshots appearing in the interface
# then set this setting to False otherwise just leave it as True.
UserSetting::[Key="SaveScreenshotRefs", Value="True"]

# The percentage of tolerance we have for differences between the new image
# captured compared with the previous image captured when using Optimize Screen Capture.
# The more tolerant we are the less likely we'll save screenshots because we would
# only consider saving the new image if it was very different from the previous image.
#
# The minimum value is 0. The maximum value is 100.
# It's recommended to not set this value to either 0 or 100 unless you really want to.
# Set the value to be around 60 or 70 if differences are more acceptable.
# Set the value to around 10 if you want the application to be much less concerned about differences.
#
# 10-30         Minor differences will be considered when saving screenshots
# 40-70         Major differences will be considered when saving screenshots
UserSetting::[Key="ImageDiffTolerance", Value="20"]

# Determines if we should compare the histogram of the new image captured
# with the histogram of the previous image captured. If the resulting histogram
# has a difference percentage that is less than ImageDiffTolerance then
# the new image won't be saved.
#
# It can help save on disk space if this is set to True but the timing of each
# cycle of screenshots will become inaccurate since screenshots won't always be saved.
UserSetting::[Key="OptimizeScreenCapture", Value="False"]

# Determines the screen capture cycle limit. By default this will normally stop the
# currently running screen capture session when the specified limit is reached.
UserSetting::[Key="CaptureLimit", Value="0"]

# Determines if we should enable or disable the capture limit.
UserSetting::[Key="CaptureLimitCheck", Value="False"]

# The number of screenshot items to display in the list of screenshot items below the calendar.
# If the number exceeds this defined limit then we don't attempt to load the screenshots.
ApplicationSetting::[Key="ScreenshotsLoadLimit", Value="5000"]

# Cut the filepath of a saved screenshot down to the specified number of characters
# if the filepath length is greater than the specified number of characters.
# Windows has a 259 character limit on the full filepath. If we exceed that limit then
# the filepath will be truncated and the screenshot might still get saved. If not we will
# write the thrown exception error to the error log file
# (Windows throws a System.IO.PathTooLongException from System.IO.Path.LegacyNormalizePath).
# This will normally be something like ...
# "The specified path, file name, or both are too long. The fully qualified file name must be less than 260 characters, and the directory name must be less than 248 characters."
# So, to play it safe, have this value set to 259 unless your version of Windows can handle longer filepaths.
ApplicationSetting::[Key="FilepathLengthLimit", Value="259"]

# Cut the active window title (when parsing macro tags) down to the specified number of characters
# if the active window title is greater than the specified number of characters.
ApplicationSetting::[Key="ActiveWindowTitleLengthLimit", Value="2000"]

# Adjust the experience for the user if it's the first time running the application.
UserSetting::[Key="FirstRun", Value="True"]

# Determines if we confirm exiting the application before actually exiting the application.
# This does not apply to using "-exit" from the command line or clicking on the "Exit Auto Screen Capture" button in the Auto Screen Capture For Beginners tool.
UserSetting::[Key="ConfirmExit", Value="True"]

# This applies to the Auto Screen Capture For Beginners tool. Should the Screen Capture Status window appear when starting a screen capture session?
UserSetting::[Key="ShowScreenCaptureStatusOnStart", Value="True"]

# This applies to the Auto Screen Capture For Beginners tool. Should the screenshots folder appear in Windows File Explorer when stopping a screen capture session?
UserSetting::[Key="ShowScreenshotsFolderOnStop", Value="True"]

# A count of how many times the user has started a screen capture session.
# It doesn't do anything but it might be an interesting statistic when looking at the user.xml data file.
UserSetting::[Key="StartScreenCaptureCount", Value="0"]

# The default screenshot label that will be applied to each screenshot during a screen capture session.
UserSetting::[Key="ScreenshotLabel", Value=""]

# Determines if we should apply the defined screenshot label.
UserSetting::[Key="ApplyScreenshotLabel", Value="False"]

# All the options available for Active Window Title text matching.
# 1    Case Sensitive Match
# 2    Case Insensitive Match
# 3    Regular Expression Match
UserSetting::[Key="ActiveWindowTitleMatchType", Value="2"]

# The text to use when matching against the active window title.
# Leave it empty to disable this feature.
UserSetting::[Key="ActiveWindowTitleCaptureText", Value=""]

# Determines if we should match the provided text (from ActiveWindowTitleCaptureText) with the active window title.
UserSetting::[Key="ActiveWindowTitleCaptureCheck", Value="True"]

# Determines if we should NOT match the provided text (from ActiveWindowTitleCaptureText) with the active window title.
UserSetting::[Key="ActiveWindowTitleNoMatchCheck", Value="False"]

# The text to use for a sample when testing active window title matching.
UserSetting::[Key="ActiveWindowTitleSampleText", Value=""]

# The process name of the application (such as "notepad") that Auto Screen Capture should force focus on during a screen capture session.
# Leave it empty to disable this feature.
UserSetting::[Key="ApplicationFocus", Value=""]

# The number of milliseconds we should wait before force focusing on the defined application.
UserSetting::[Key="ApplicationFocusDelayBefore", Value="0"]

# The number of milliseconds we should wait after force focusing on the defined application.
UserSetting::[Key="ApplicationFocusDelayAfter", Value="0"]

# The size (in pixels) of each box shown on Dashboard for each Screen and Region.
UserSetting::[Key="DashboardGroupBoxSize", Value="250"]

# The wallpaper to use as the background image for the Dashboard.
# If a filepath is not provided then the application will use its internal wallpaper image.
UserSetting::[Key="DashboardWallpaper", Value=""]

# The index of the tab page to show.
# 0    Dashboard
# 1    This is normally "Active Window"
# 2    This is normally "Screen 1"
UserSetting::[Key="SelectedTabPageIndex", Value="0"]

# The index of the module to show.
# 0    Screens
# 1    Regions
# 2    Editors
# 3    Schedules
# 4    Macro Tags
# 5    Triggers
UserSetting::[Key="SelectedModuleIndex", Value="0"]

# The index of the selected "slide" (a screenshot list item).
UserSetting::[Key="SelectedSlideIndex", Value="0"]

# Determines if we have the modules panel open (True) or not (False).
UserSetting::Key="ModulesPanelOpen", Value="True"]

# The index of the filter type to use.
UserSetting::[Key="FilterType", Value="0"]

# The index of the filter value to use.
UserSetting::[Key="FilterValue", Value="0"]

# Determines if we use "EnumDisplaySettings (user32.dll)" for AutoAdapt.
UserSetting::[Key="AutoAdaptUsesEnumDisplaySettings", Value="False"]

# External commands are written to this file. The application constantly monitors
# the file for any commands being provided to it.
#
# For example, you can either run "autoscreen.exe -start" to have the "-start" command
# written to the file or write "-start" in this file to start a screen capture session.
ApplicationSetting::[Key="CommandFile", Value="$AppDataLocal$\Auto Screen Capture\!autoscreen\command.txt"]

# Determines if we should automatically start a screen capture session when running "autoscreen.exe" without the "-start" command.
# Set this to either True or False.
ApplicationSetting::[Key="AutoStartFromCommandLine", Value="False"]

# Default SFTP settings.
SFTPSetting::[Key="FileTransferServerHost", Value=""]
SFTPSetting::[Key="FileTransferServerPort", Value="22"]
SFTPSetting::[Key="FileTransferClientUsername", Value=""]
SFTPSetting::[Key="FileTransferClientPassword", Value=""]
SFTPSetting::[Key="FileTransferIsLinuxServer", Value="True"]
UserSetting::[Key="SFTPDeleteLocalFileAfterSuccessfulUpload", Value="False"]
UserSetting::[Key="SFTPKeepFailedUploads", Value="True"]

# Should we allow the user to change the SFTP settings? Set this to either True or False.
# This affects the accessibility of the "File Transfer Settings" menu item in "Settings".
ApplicationSetting::[Key="AllowUserToConfigureFileTransferSettings", Value="True"]

# Default SMTP settings.
SMTPSetting::[Key="EmailServerHost", Value="smtp.office365.com"]
SMTPSetting::[Key="EmailServerPort", Value="587"]
SMTPSetting::[Key="EmailServerEnableSSL", Value="True"]
SMTPSetting::[Key="EmailClientUsername", Value=""]
SMTPSetting::[Key="EmailClientPassword", Value=""]
SMTPSetting::[Key="EmailMessageFrom", Value=""]
SMTPSetting::[Key="EmailMessageTo", Value=""]
SMTPSetting::[Key="EmailMessageCC", Value=""]
SMTPSetting::[Key="EmailMessageBCC", Value=""]
SMTPSetting::[Key="EmailMessageSubject", Value=""]
SMTPSetting::[Key="EmailMessageBody", Value=""]
SMTPSetting::[Key="EmailPrompt", Value="True"]

# Should we allow the user to change SMTP settings? Set this to either True or False.
# This affects the accessibility of the "Email Settings" menu item in "Settings".
ApplicationSetting::[Key="AllowUserToConfigureEmailSettings", Value="True"]

# Determines if we should enable or disable keyboard shortcuts.
UserSetting::[Key="UseKeyboardShortcuts", Value="False"]

# Keyboard shortcut for Start Screen Capture.
UserSetting::[Key="KeyboardShortcutStartScreenCaptureModifier1", Value="Control"]
UserSetting::[Key="KeyboardShortcutStartScreenCaptureModifier2", Value="Alt"]
UserSetting::[Key="KeyboardShortcutStartScreenCaptureKey", Value="Z"]

# Keyboard shortcut for Stop Screen Capture.
UserSetting::[Key="KeyboardShortcutStopScreenCaptureModifier1", Value="Control"]
UserSetting::[Key="KeyboardShortcutStopScreenCaptureModifier2", Value="Alt"]
UserSetting::[Key="KeyboardShortcutStopScreenCaptureKey", Value="X"]

# Keyboard shortcut for Capture Now / Archive.
UserSetting::[Key="KeyboardShortcutCaptureNowArchiveModifier1", Value="Control"]
UserSetting::[Key="KeyboardShortcutCaptureNowArchiveModifier2", Value="Alt"]
UserSetting::[Key="KeyboardShortcutCaptureNowArchiveKey", Value="A"]

# Keyboard shortcut for Capture Now / Edit.
UserSetting::[Key="KeyboardShortcutCaptureNowEditModifier1", Value="Control"]
UserSetting::[Key="KeyboardShortcutCaptureNowEditModifier2", Value="Alt"]
UserSetting::[Key="KeyboardShortcutCaptureNowEditKey", Value="E"]

# Keyboard shortcut for Region Select -> Clipboard.
UserSetting::[Key="KeyboardShortcutRegionSelectClipboardModifier1", Value="Control"]
UserSetting::[Key="KeyboardShortcutRegionSelectClipboardModifier2", Value="Shift"]
UserSetting::[Key="KeyboardShortcutRegionSelectClipboardKey", Value="C"]

# Keyboard shortcut for Region Select -> Clipboard / Auto Save.
UserSetting::[Key="KeyboardShortcutRegionSelectAutoSaveModifier1", Value="Control"]
UserSetting::[Key="KeyboardShortcutRegionSelectAutoSaveModifier2", Value="Shift"]
UserSetting::[Key="KeyboardShortcutRegionSelectAutoSaveKey", Value="S"]

# Keyboard shortcut for Region Select -> Clipboard / Auto Save / Edit.
UserSetting::[Key="KeyboardShortcutRegionSelectEditModifier1", Value="Control"]
UserSetting::[Key="KeyboardShortcutRegionSelectEditModifier2", Value="Shift"]
UserSetting::[Key="KeyboardShortcutRegionSelectEditKey", Value="E"]

# Editors
# An "Editor" is either an application or script that can be executed by Auto Screen Capture.
# Make sure to use $filepath$ in ApplicationArguments if you want Auto Screen Capture to provide the filepath of a screenshot to the application or script.
ApplicationSetting::[Key="EditorsFile", Value="$AppDataLocal$\Auto Screen Capture\!autoscreen\editors.xml"]
UserSetting::[Key="DefaultEditor", Value="Microsoft Paint"]
Editor::[Name="Microsoft Paint", ApplicationPath="C:\Windows\System32\mspaint.exe", ApplicationArguments="$filepath$", Notes=""]
Editor::[Name="Snagit 2020 Editor", ApplicationPath="C:\Program Files\TechSmith\Snagit 2020\SnagitEditor.exe", ApplicationArguments="$filepath$", Notes=""]
Editor::[Name="ShareX Image Editor", ApplicationPath="C:\Program Files\ShareX\ShareX.exe", ApplicationArguments="-ImageEditor $filepath$", Notes=""]
Editor::[Name="Microsoft Outlook Email Message", ApplicationPath="C:\Program Files\Microsoft Office\root\Office16\OUTLOOK.EXE", ApplicationArguments="/c ipm.note /a $filepath$", Notes=""]
Editor::[Name="Google Chrome", ApplicationPath="C:\Program Files (x86)\Google\Chrome\Application\chrome.exe", ApplicationArguments="$filepath$", Notes=""]
Editor::[Name="Mozilla Firefox", ApplicationPath="C:\Program Files\Mozilla Firefox\firefox.exe", ApplicationArguments="$filepath$", Notes=""]
Editor::[Name="GIMP", ApplicationPath="C:\Program Files\GIMP 2\bin\gimp-2.10.exe", ApplicationArguments="$filepath$", Notes=""]
Editor::[Name="Glimpse", ApplicationPath="C:\Program Files (x86)\Glimpse Image Editor\Glimpse 0.1.2\bin\Glimpse.exe", ApplicationArguments="$filepath$", Notes=""]
Editor::[Name="Clip Studio Paint", ApplicationPath="C:\Program Files\CELSYS\CLIP STUDIO 1.5\CLIP STUDIO PAINT\CLIPStudioPaint.exe", ApplicationArguments="$filepath$", Notes=""]

# Schedules
# A "Schedule" starts and stops a screen capture session based on its start time and end time.
# You can define what days a Schedule should consider, the scope of what Screens and Regions a Schedule should use, and the interval at which the scheduled screen capture session should run at.
ApplicationSetting::[Key="SchedulesFile", Value="$AppDataLocal$\Auto Screen Capture\!autoscreen\schedules.xml"]
Schedule::[Enable=False, Name="Work Schedule - Morning", Scope="All Screens and Regions", OneTime=False, Period=True, Logic=0, CaptureAt=00:00, StartAt=09:00, StopAt=12:00, Interval=60000, Monday=True, Tuesday=True, Wednesday=True, Thursday=True, Friday=True, Saturday=False, Sunday=False, Notes="This schedule was created by Auto Screen Capture and is disabled by default. It takes screenshots every weekday between 9am and 12pm using a one minute interval."]
Schedule::[Enable=False, Name="Work Schedule - Afternoon", Scope="All Screens and Regions", OneTime=False, Period=True, Logic=0, CaptureAt=00:00, StartAt=13:00, StopAt=17:00, Interval=60000, Monday=True, Tuesday=True, Wednesday=True, Thursday=True, Friday=True, Saturday=False, Sunday=False, Notes="This schedule was created by Auto Screen Capture and is disabled by default. It takes screenshots every weekday between 1pm and 5pm using a one minute interval."]

# Macro Tags
# These are used in filename patterns. For example you can include the current date and current time in a screenshot's filename with %date% and %time% respectively.
ApplicationSetting::[Key="MacroTagsFile", Value="$AppDataLocal$\Auto Screen Capture\!autoscreen\macrotags.xml"]
MacroTag::[Enable=True, Name="%name%", Description="The name of the screen or region", Type="ScreenName", DateTimeFormatValue="yyyy-MM-dd_HH-mm-ss.fff", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%screen%", Description="The screen number. For example, the first display is screen 1 and the second display is screen 2", Type="ScreenNumber", DateTimeFormatValue="yyyy-MM-dd_HH-mm-ss.fff", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%format%", Description="The image format such as jpeg or png", Type="ImageFormat", DateTimeFormatValue="yyyy-MM-dd_HH-mm-ss.fff", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%date%", Description="The current date", Type="DateTimeFormat", DateTimeFormatValue="yyyy-MM-dd", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%time%", Description="The current time", Type="DateTimeFormat", DateTimeFormatValue="HH-mm-ss.fff", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%year%", Description="The current year", Type="DateTimeFormat", DateTimeFormatValue="yyyy", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%month%", Description="The current month", Type="DateTimeFormat", DateTimeFormatValue="MM", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%day%", Description="The current day", Type="DateTimeFormat", DateTimeFormatValue="dd", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%hour%", Description="The current hour", Type="DateTimeFormat", DateTimeFormatValue="HH", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%minute%", Description="The current minute", Type="DateTimeFormat", DateTimeFormatValue="mm", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%second%", Description="The current second", Type="DateTimeFormat", DateTimeFormatValue="ss", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%millisecond%", Description="The current millisecond", Type="DateTimeFormat", DateTimeFormatValue="fff", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%lastyear%", Description="The previous year", Type="DateTimeFormatExpression", DateTimeFormatValue="{year-1}", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%lastmonth%", Description="The previous month", Type="DateTimeFormatExpression", DateTimeFormatValue="{month-1}", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%yesterday%", Description="The previous day", Type="DateTimeFormatExpression", DateTimeFormatValue="{day-1}[yyyy-MM-dd]", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%tomorrow%", Description="The next day", Type="DateTimeFormatExpression", DateTimeFormatValue="{day+1}[yyyy-MM-dd]", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%6hoursbehind%", Description="Six hours behind the current hour", Type="DateTimeFormatExpression", DateTimeFormatValue="{hour-6}[yyyy-MM-dd_HH-mm-ss.fff]", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%6hoursahead%", Description="Six hours ahead the current hour", Type="DateTimeFormatExpression", DateTimeFormatValue="{hour+6}[yyyy-MM-dd_HH-mm-ss.fff]", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%count%", Description="The number of capture cycles during a running screen capture session", Type="ScreenCaptureCycleCount", DateTimeFormatValue="yyyy-MM-dd_HH-mm-ss.fff", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%user%", Description="The user using this computer", Type="User", DateTimeFormatValue="yyyy-MM-dd_HH-mm-ss.fff", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%machine%", Description="The name of the computer", Type="Machine", DateTimeFormatValue="yyyy-MM-dd_HH-mm-ss.fff", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%title%", Description="The title of the active window", Type="ActiveWindowTitle", DateTimeFormatValue="yyyy-MM-dd_HH-mm-ss.fff", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%timerange%", Description="The macro to use during a specific time range", Type="TimeRange", DateTimeFormatValue="yyyy-MM-dd_HH-mm-ss.fff", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%quarteryear%", Description="A number representing the current quarter of the current year", Type="QuarterYear", DateTimeFormatValue="yyyy-MM-dd_HH-mm-ss.fff", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%x%", Description="The X value of the screen or region", Type="X", DateTimeFormatValue="yyyy-MM-dd_HH-mm-ss.fff", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%y%", Description="The Y value of the screen or region", Type="Y", DateTimeFormatValue="yyyy-MM-dd_HH-mm-ss.fff", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%width%", Description="The Width value of the screen or region", Type="Width", DateTimeFormatValue="yyyy-MM-dd_HH-mm-ss.fff", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%height%", Description="The Height value of the screen or region", Type="Height", DateTimeFormatValue="yyyy-MM-dd_HH-mm-ss.fff", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%process%", Description="The name of the active process", Type="Process", DateTimeFormatValue="yyyy-MM-dd_HH-mm-ss.fff", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%label%", Description="The label being applied to the saved screenshot", Type="Label", DateTimeFormatValue="yyyy-MM-dd_HH-mm-ss.fff", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]
MacroTag::[Enable=True, Name="%capturenowcount%", Description="The number of times Capture Now has been used", Type="CaptureNowCount", DateTimeFormatValue="yyyy-MM-dd_HH-mm-ss.fff", Macro1TimeRangeStart=00:00:00, Macro1TimeRangeEnd=11:59:59, Macro1TimeRangeMacro="morning at %hour%-%minute%-%second%", Macro2TimeRangeStart=12:00:00, Macro2TimeRangeEnd=17:59:59, Macro2TimeRangeMacro="afternoon at %hour%-%minute%-%second%", Macro3TimeRangeStart=18:00:00, Macro3TimeRangeEnd=23:59:59, Macro3TimeRangeMacro="evening at %hour%-%minute%-%second%", Macro4TimeRangeStart=00:00:00, Macro4TimeRangeEnd=00:00:00, Macro4TimeRangeMacro="", Notes=""]

# Triggers
# You can control the behaviour of the Auto Screen Capture application with "Triggers"; simply define what action will be taken based on the given condition.
ApplicationSetting::[Key="TriggersFile", Value="$AppDataLocal$\Auto Screen Capture\!autoscreen\triggers.xml"]
Trigger::[Enable=True, Name="Show Icon on Startup", Condition=ApplicationStartup, Action=ShowSystemTrayIcon, Date=2022-01-01, Time=00:00, Day=Weekday, Days=0, Interval=60000, CycleCount=0, Duration=0, DurationType=0, Value=""]
Trigger::[Enable=True, Name="Show Interface on Startup", Condition=ApplicationStartup, Action=ShowInterface, Date=2022-01-01, Time=00:00, Day=Weekday, Days=0, Interval=60000, CycleCount=0, Duration=0, DurationType=0, Value=""]
Trigger::[Enable=True, Name="Hide Interface on Start", Condition=ScreenCaptureStarted, Action=HideInterface, Date=2022-01-01, Time=00:00, Day=Weekday, Days=0, Interval=60000, CycleCount=0, Duration=0, DurationType=0, Value=""]
Trigger::[Enable=True, Name="Show Interface on Stop", Condition=ScreenCaptureStopped, Action=ShowInterface, Date=2022-01-01, Time=00:00, Day=Weekday, Days=0, Interval=60000, CycleCount=0, Duration=0, DurationType=0, Value=""]
Trigger::[Enable=True, Name="Hide Interface on Close", Condition=InterfaceClosing, Action=HideInterface, Date=2022-01-01, Time=00:00, Day=Weekday, Days=0, Interval=60000, CycleCount=0, Duration=0, DurationType=0, Value=""]
Trigger::[Enable=True, Name="Stop on Limit", Condition=LimitReached, Action=StopScreenCapture, Date=2022-01-01, Time=00:00, Day=Weekday, Days=0, Interval=60000, CycleCount=0, Duration=0, DurationType=0, Value=""]
Trigger::[Enable=False, Name="Delete Screenshots 30 Days Old", Condition=BeforeScreenshotReferencesSaved, Action=DeleteScreenshotsByDays, Date=2022-01-01, Time=00:00, Day=Weekday, Days=30, Interval=60000, CycleCount=0, Duration=0, DurationType=0, Value="$AppDataLocal$\Auto Screen Capture\screenshots\$date[yyyy-MM-dd]$"]
Trigger::[Enable=True, Name="Icon Double Click", Condition=SystemTrayIconDoubleClick, Action=ShowOrHideInterface, Date=2022-01-01, Time=00:00, Day=Weekday, Days=0, Interval=60000, CycleCount=0, Duration=0, DurationType=0, Value=""]
Trigger::[Enable=False, Name="Email Screenshot", Condition=AfterScreenshotTaken, Action=EmailScreenshot, Date=2022-01-01, Time=00:00, Day=Weekday, Days=0, Interval=60000, CycleCount=0, Duration=0, DurationType=0, Value=""]
Trigger::[Enable=False, Name="Upload With SFTP", Condition=AfterScreenshotTaken, Action=FileTransferScreenshot, Date=2022-01-01, Time=00:00, Day=Weekday, Days=0, Interval=60000, CycleCount=0, Duration=0, DurationType=0, Value=""]

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoScreenCapture.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AutoScreenCapture.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap _lock {
            get {
                object obj = ResourceManager.GetObject("lock", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap about {
            get {
                object obj = ResourceManager.GetObject("about", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap add {
            get {
                object obj = ResourceManager.GetObject("add", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap application_add {
            get {
                object obj = ResourceManager.GetObject("application_add", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon autoscreen {
            get {
                object obj = ResourceManager.GetObject("autoscreen", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon autoscreen_error {
            get {
                object obj = ResourceManager.GetObject("autoscreen_error", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon autoscreen_running_not_optimized {
            get {
                object obj = ResourceManager.GetObject("autoscreen_running_not_optimized", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon autoscreen_running_optimized {
            get {
                object obj = ResourceManager.GetObject("autoscreen_running_optimized", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon autoscreen_warning {
            get {
                object obj = ResourceManager.GetObject("autoscreen_warning", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap blade {
            get {
                object obj = ResourceManager.GetObject("blade", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap blade0 {
            get {
                object obj = ResourceManager.GetObject("blade0", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap blade1 {
            get {
                object obj = ResourceManager.GetObject("blade1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap blade2 {
            get {
                object obj = ResourceManager.GetObject("blade2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap blade3 {
            get {
                object obj = ResourceManager.GetObject("blade3", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap blade4 {
            get {
                object obj = ResourceManager.GetObject("blade4", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap blade5 {
            get {
                object obj = ResourceManager.GetObject("blade5", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap blade6 {
            get {
                object obj = ResourceManager.GetObject("blade6", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap brick {
            get {
                object obj = ResourceManager.GetObject("brick", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap capture_archive {
            get {
                object obj = ResourceManager.GetObject("capture_archive", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap capture_edit {
            get {
                object obj = ResourceManager.GetObject("capture_edit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap command_line {
            get {
                object obj = ResourceManager.GetObject("command_line", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap configure {
            get {
                object obj = ResourceManager.GetObject("configure", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap delete {
            get {
                object obj = ResourceManager.GetObject("delete", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap edit {
            get {
                object obj = ResourceManager.GetObject("edit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap email {
            get {
                object obj = ResourceManager.GetObject("email", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap exit {
            get {
                object obj = ResourceManager.GetObject("exit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap file_transfer {
            get {
                object obj = ResourceManager.GetObject("file_transfer", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap help {
            get {
                object obj = ResourceManager.GetObject("help", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
        ///{\colortbl ;\red0\green0\blue255;}
        ///{\*\generator Riched20 10.0.17763}\viewkind4\uc1 
        ///\pard\sa200\sl276\slmult1\b\f0\fs28\lang9 Welcome\fs22\par
        ///\b0 You made it!\par
        ///Auto Screen Capture is like a bottle of scotch that sits on the top shelf collecting dust over the years; it&apos;s not popular, but it proves to be unique and special once you understand it.\par
        ///This application is a portable automated screen capture ut [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string help_0 {
            get {
                return ResourceManager.GetString("help_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
        ///{\colortbl ;\red0\green0\blue255;}
        ///{\*\generator Riched20 10.0.17763}\viewkind4\uc1 
        ///\pard\sa200\sl276\slmult1\f0\fs22\lang9                     GNU GENERAL PUBLIC LICENSE\par
        ///                       Version 3, 29 June 2007\par
        ///\par
        /// Copyright (C) 2007 Free Software Foundation, Inc. &lt;{{\field{\*\fldinst{HYPERLINK &quot;https://fsf.org/&quot;}}{\fldrslt{https://fsf.org/\ul0\cf0}}}}\f0\fs22 &gt;\par
        /// Everyone is permitted to copy and distribute verb [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string help_1 {
            get {
                return ResourceManager.GetString("help_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\ansicpg1252\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset0 Consolas;}}
        ///{\colortbl ;\red255\green255\blue255;\red0\green0\blue0;}
        ///{\*\generator Riched20 10.0.17763}\viewkind4\uc1 
        ///\pard\sa200\sl276\slmult1\b\f0\fs28\lang9 Command Line\b0\par
        ///\fs22 Auto Screen Capture can be controlled from a command line terminal such as Command Prompt (cmd.exe) or Windows PowerShell (powershell.exe) depending on what you prefer to use.\par
        ///Simply running &quot;autoscreen.exe&quot; without c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string help_10 {
            get {
                return ResourceManager.GetString("help_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
        ///{\*\generator Riched20 10.0.17763}\viewkind4\uc1 
        ///\pard\sa200\sl276\slmult1\b\f0\fs22\lang9 Common Setup Scenarios\b0\par
        ///\par
        ///}
        ///.
        /// </summary>
        internal static string help_11 {
            get {
                return ResourceManager.GetString("help_11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset0 Consolas;}{\f2\fnil Consolas;}}
        ///{\colortbl ;\red0\green0\blue255;\red0\green0\blue0;}
        ///{\*\generator Riched20 10.0.17763}\viewkind4\uc1 
        ///\pard\sa200\sl276\slmult1\b\f0\fs28\lang9 Changelog\b0\fs22\par
        ///Who reads these things?\par
        ///This is where I keep track of the application&apos;s changes. You&apos;re going to find major releases divided into specific versions and code-named as Legacy (1.0), Phoenix (2.0) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string help_2 {
            get {
                return ResourceManager.GetString("help_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\ansicpg1252\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
        ///{\colortbl ;\red0\green0\blue255;}
        ///{\*\generator Riched20 10.0.17763}\viewkind4\uc1 
        ///\pard\sa200\sl276\slmult1\b\f0\fs28\lang9 Getting Started\fs22\par
        ///
        ///\pard\sa200\sl240\slmult1\b0 Check what will be captured before starting a screen capture session by making sure that the Preview button is enabled.\par
        ///You should see a real-time preview when looking at the tab named &quot;Dashboard&quot; or any of the tabs to the right of the Dash [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string help_3 {
            get {
                return ResourceManager.GetString("help_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
        ///{\*\generator Riched20 10.0.17763}\viewkind4\uc1 
        ///\pard\sa200\sl240\slmult1\b\f0\fs28\lang9 Screens\b0\fs22\par
        ///The &quot;Screens&quot; module shows you what displays you may have available. Each &quot;Screen&quot; that is created on the first run of Auto Screen Capture will be configured to adapt to your display setup and may not be an accurate representation of your current display setup. For example, if you see five screens listed [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string help_4 {
            get {
                return ResourceManager.GetString("help_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\ansicpg1252\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
        ///{\*\generator Riched20 10.0.17763}\viewkind4\uc1 
        ///\pard\sa200\sl276\slmult1\b\f0\fs28\lang9 Regions\b0\fs22\par
        ///The &quot;Regions&quot; module gives you the ability to add, configure, and remove multiple regions. A region represents an area of a screen and will always be defined by its X, Y, Width, and Height values.\par
        ///
        ///\pard\sa200\sl240\slmult1{\pict{\*\picprop}\wmetafile8\picw6509\pich4763\picwgoal3690\pichgoal2700 
        ///010009000003 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string help_5 {
            get {
                return ResourceManager.GetString("help_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\ansicpg1252\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
        ///{\*\generator Riched20 10.0.17763}\viewkind4\uc1 
        ///\pard\sa200\sl276\slmult1\b\f0\fs28\lang9 Editors\b0\fs22\par
        ///The &quot;Editors&quot; module gives you the ability to add, configure, and remove applications and/or scripts that are used by Auto Screen Capture to edit or open screenshots. For example, you could have a screenshot opened by a PowerShell script or an application (such as Clip Studio Paint or GIMP).\par
        ///
        ///\pard\sa200\sl240 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string help_6 {
            get {
                return ResourceManager.GetString("help_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\ansicpg1252\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
        ///{\*\generator Riched20 10.0.17763}\viewkind4\uc1 
        ///\pard\sa200\sl276\slmult1\b\f0\fs28\lang9 Schedules\b0\fs22\par
        ///The &quot;Schedules&quot; module gives you the ability to add, configure, and remove schedules that define when screenshots should be taken between a time period.\par
        ///
        ///\pard\sa200\sl240\slmult1{\pict{\*\picprop}\wmetafile8\picw6456\pich5159\picwgoal3660\pichgoal2925 
        ///010009000003021701000000ec1601000000050000000b02000000 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string help_7 {
            get {
                return ResourceManager.GetString("help_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\ansicpg1252\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}
        ///{\*\generator Riched20 10.0.17763}\viewkind4\uc1 
        ///\pard\sa200\sl276\slmult1\b\f0\fs28\lang9 Macro Tags\b0\fs22\par
        ///The &quot;Macro Tags&quot; module gives you the ability to add, configure, and remove macro tags.\par
        ///A macro tag can be included in the filename and acquires certain information based on what type of macro tag is being used. You could, for example, acquire the current time with the %time% macr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string help_8 {
            get {
                return ResourceManager.GetString("help_8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}
        ///{\*\generator Riched20 10.0.17763}\viewkind4\uc1 
        ///\pard\sa200\sl276\slmult1\b\f0\fs28\lang9 Triggers\b0\fs22\par
        ///The &quot;Triggers&quot; module gives you the ability to add, configure, and remove triggers.\par
        ///A trigger controls the behaviour of Auto Screen Capture by having the application perform a specified action based on a specified condition.\par
        ///
        ///\pard\sa200\sl240\slmult1{\pict{\*\picprop}\wmetafile8\picw6403 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string help_9 {
            get {
                return ResourceManager.GetString("help_9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap keyboard {
            get {
                object obj = ResourceManager.GetObject("keyboard", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap lightbulb {
            get {
                object obj = ResourceManager.GetObject("lightbulb", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap openfolder {
            get {
                object obj = ResourceManager.GetObject("openfolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap properties {
            get {
                object obj = ResourceManager.GetObject("properties", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap refresh {
            get {
                object obj = ResourceManager.GetObject("refresh", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap region {
            get {
                object obj = ResourceManager.GetObject("region", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap schedule {
            get {
                object obj = ResourceManager.GetObject("schedule", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap screen {
            get {
                object obj = ResourceManager.GetObject("screen", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap setup {
            get {
                object obj = ResourceManager.GetObject("setup", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap start_screen_capture {
            get {
                object obj = ResourceManager.GetObject("start_screen_capture", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap stop_screen_capture {
            get {
                object obj = ResourceManager.GetObject("stop_screen_capture", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap tools {
            get {
                object obj = ResourceManager.GetObject("tools", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap trigger {
            get {
                object obj = ResourceManager.GetObject("trigger", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap unlock {
            get {
                object obj = ResourceManager.GetObject("unlock", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap warning {
            get {
                object obj = ResourceManager.GetObject("warning", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap zoom_in {
            get {
                object obj = ResourceManager.GetObject("zoom_in", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap zoom_out {
            get {
                object obj = ResourceManager.GetObject("zoom_out", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
